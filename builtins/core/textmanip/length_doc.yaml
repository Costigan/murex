- DocumentID: left
  Title: >+
    `left`
  CategoryID: commands
  Summary: >-
    Left substring a list
  Description: |-
    Takes a list from STDIN and returns a left substring of that same list.

    One parameter is required and that is the number of characters to return. If
    the parameter is a negative then `left` counts from the right.
  Usage: |-
    ```
    <stdin> -> left int -> <stdout>
    ```
  Examples: |-
    Count from the left

    ```
    » ja: [Monday..Wednesday] -> left 2
    [
        "Mo",
        "Tu",
        "We"
    ]
    ```

    Count from the right
    
    ```
    » ja: [Monday..Wednesday] -> left -3
    [
        "Mon",
        "Tues",
        "Wednes"
    ]
    ```
  Flags:
  Detail: |-
    Supported data types can queried via `runtime`

    ```
    runtime: --marshallers
    runtime: --unmarshallers
    ```
  Synonyms:
  Related:
  - right
  - prefix
  - suffix
  - ja
  - a
  - api/marshaldata
  - api/unmarshaldata



- DocumentID: right
  Title: >+
    `right`
  CategoryID: commands
  Summary: >-
    Right substring a list
  Description: |-
    Takes a list from STDIN and returns a right substring of that same list.

    One parameter is required and that is the number of characters to return. If
    the parameter is a negative then `right` counts from the left.
  Usage: |-
    ```
    <stdin> -> right int -> <stdout>
    ```
  Examples: |-
    Count from the right

    ```
    » ja: [Monday..Wednesday] -> right 4
    [
        "nday",
        "sday",
        "sday"
    ]
    ```

    Count from the left
    
    ```
    » ja: [Monday..Wednesday] -> left -3
    [
        "day",
        "sday",
        "nesday"
    ]
    ```
  Flags:
  Detail: |-
    Supported data types can queried via `runtime`

    ```
    runtime: --marshallers
    runtime: --unmarshallers
    ```
  Synonyms:
  Related:
  - right
  - prefix
  - suffix
  - ja
  - a
  - api/marshaldata
  - api/unmarshaldata
