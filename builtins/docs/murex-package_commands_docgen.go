package docs

func init() {

	Definition["murex-package"] = "# _murex_ Shell Guide\n\n## Command Reference: `murex-package`\n\n> _murex_'s package manager\n\n### Description\n\n_murex_ comes with it's own package manager to make managing plugins easier.\n\n### Usage\n\n    murex-package install uri\n    \n    murex-package update\n    \n    murex-package enable package\n    murex-package enable package/module\n    \n    murex-package disable package\n    murex-package disable package/module\n    \n    murex-package import [ uri | local/path ] packages.json\n    \n    murex-package status -> <stdout>\n\n### Flags\n\n* `disable`\n    Disables a previously enabled package or module\n* `enable`\n    Enables a previously disabled package or module\n* `import`\n    Import packages described in a backup package DB from user defined URI or local path\n* `install`\n    Installs a package from a user defined URI\n* `status`\n    Returns the version status of locally installed packages\n* `update`\n    Updates all installed packages\n\n### See Also\n\n* [`alias`](../commands/alias.md):\n  Create an alias for a command\n* [`config`](../commands/config.md):\n  Query or define _murex_ runtime settings\n* [`function`](../commands/function.md):\n  Define a function block\n* [`private`](../commands/private.md):\n  Define a private function block\n* [`runtime`](../commands/runtime.md):\n  Returns runtime information on the internal state of _murex_\n* [murex-man](../commands/murex-man.md):\n  \n* [status](../commands/status.md):\n  "

}
